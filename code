mkdir todo-app
cd todo-app

npm init -y

npm install express mongoose body-parser cors

npm install --save-dev typescript ts-node nodemon @types/node @types/express @types/mongoose @types/body-parser @types/cors

{
  "compilerOptions": {
    "target": "es6",
    "module": "commonjs",
    "outDir": "dist",
    "strict": true,
    "esModuleInterop": true
  },
  "include": [
    "src/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}

mkdir src
cd src

import express from 'express';
import mongoose from 'mongoose';
import bodyParser from 'body-parser';
import cors from 'cors';

const app = express();
const port = 3000;

// Middleware
app.use(bodyParser.json());
app.use(cors());

// MongoDB setup
const mongoURI = 'mongodb+srv://<username>:<password>@<cluster-url>/<database-name>?retryWrites=true&w=majority';
mongoose
  .connect(mongoURI, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => console.log('Connected to MongoDB'))
  .catch((error) => console.error('MongoDB connection error:', error));

// Routes
app.get('/', (req, res) => {
  res.send('Hello, world!');
});

// Start the server
app.listen(port, () => {
  console.log(`Server running at http://localhost:${port}`);
});

"scripts": {
  "start": "ts-node src/index.ts",
  "dev": "nodemon src/index.ts"
}

npm run dev

# Use the official Node.js image as the base
FROM node:14

# Set the working directory in the container
WORKDIR /app


